//netbeans IDe 26
//Vinicius Souza dias 2564599



import java.awt.Dimension;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.ArrayList;
import java.text.Normalizer;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;




/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author valuc
 */
public class FromPrincipal extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FromPrincipal.class.getName());
    
    public Armazenamento armazen;
    public boolean buscaDetalhada = false;
    
    /**
     * Creates new form Principal
     */
    private static FromPrincipal fromPrincipalUnic;
    
    private FromPrincipal() {
        initComponents();
        armazen = Armazenamento.geraArmazen();
    }

    //singleton
    public static FromPrincipal gerarFromPrincipal(){
        if(fromPrincipalUnic == null){
            fromPrincipalUnic = new FromPrincipal();
        }
        return fromPrincipalUnic;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pnPrincipal = new javax.swing.JPanel();
        rtTitulo = new javax.swing.JLabel();
        cxBusca = new javax.swing.JTextField();
        rtNome = new javax.swing.JLabel();
        rtBusca = new javax.swing.JLabel();
        rtMeioBusca = new javax.swing.JLabel();
        pnBusca = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbLivros = new javax.swing.JTable();
        rtDetalhes = new javax.swing.JLabel();
        btCadastro = new javax.swing.JButton();
        barMnPrincipal = new javax.swing.JMenuBar();
        mnLivro = new javax.swing.JMenu();
        itCadLivro = new javax.swing.JMenuItem();
        itAtuLivro = new javax.swing.JMenuItem();
        mnEditora = new javax.swing.JMenu();
        itMnCadEditora = new javax.swing.JMenuItem();
        itMnAtuEditora = new javax.swing.JMenuItem();
        itMnConsultar = new javax.swing.JMenuItem();
        mnAutor = new javax.swing.JMenu();
        itMnCadAutor = new javax.swing.JMenuItem();
        itMnAtuAutor = new javax.swing.JMenuItem();
        itMnConsultar1 = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        rtTitulo.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        rtTitulo.setText("Bem Vindo ");

        cxBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxBuscaActionPerformed(evt);
            }
        });
        cxBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cxBuscaKeyReleased(evt);
            }
        });

        rtNome.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        rtNome.setText("A Delkv");

        rtBusca.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        rtBusca.setText("Busque um livro");

        rtMeioBusca.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        rtMeioBusca.setText("Digite o titulo, Autor ou Editora");

        javax.swing.GroupLayout pnPrincipalLayout = new javax.swing.GroupLayout(pnPrincipal);
        pnPrincipal.setLayout(pnPrincipalLayout);
        pnPrincipalLayout.setHorizontalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrincipalLayout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rtMeioBusca)
                    .addComponent(rtBusca)
                    .addComponent(rtNome)
                    .addComponent(rtTitulo)
                    .addComponent(cxBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        pnPrincipalLayout.setVerticalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrincipalLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(rtTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rtNome)
                .addGap(41, 41, 41)
                .addComponent(rtBusca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cxBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rtMeioBusca)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        tbLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Tipo", "Autor", "Editora"
            }
        ));
        tbLivros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbLivrosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbLivros);

        rtDetalhes.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        rtDetalhes.setText("Clique em um livro para ver mais detalhes");

        javax.swing.GroupLayout pnBuscaLayout = new javax.swing.GroupLayout(pnBusca);
        pnBusca.setLayout(pnBuscaLayout);
        pnBuscaLayout.setHorizontalGroup(
            pnBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBuscaLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(pnBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBuscaLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(rtDetalhes))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        pnBuscaLayout.setVerticalGroup(
            pnBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnBuscaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rtDetalhes)
                .addGap(12, 12, 12))
        );

        btCadastro.setText("Cadastrar data de teste");
        btCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastroActionPerformed(evt);
            }
        });

        mnLivro.setText("Livro");

        itCadLivro.setText("Cadastrar...");
        itCadLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itCadLivroActionPerformed(evt);
            }
        });
        mnLivro.add(itCadLivro);

        itAtuLivro.setText("Atualizar...");
        itAtuLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itAtuLivroActionPerformed(evt);
            }
        });
        mnLivro.add(itAtuLivro);

        barMnPrincipal.add(mnLivro);

        mnEditora.setText("Editora");

        itMnCadEditora.setText("Cadastar...");
        itMnCadEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itMnCadEditoraActionPerformed(evt);
            }
        });
        mnEditora.add(itMnCadEditora);

        itMnAtuEditora.setText("Atualizar...");
        itMnAtuEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itMnAtuEditoraActionPerformed(evt);
            }
        });
        mnEditora.add(itMnAtuEditora);

        itMnConsultar.setText("Consulta..");
        itMnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itMnConsultarActionPerformed(evt);
            }
        });
        mnEditora.add(itMnConsultar);

        barMnPrincipal.add(mnEditora);

        mnAutor.setText("Autor");

        itMnCadAutor.setText("Cadastrar...");
        itMnCadAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itMnCadAutorActionPerformed(evt);
            }
        });
        mnAutor.add(itMnCadAutor);

        itMnAtuAutor.setText("Atualizar...");
        itMnAtuAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itMnAtuAutorActionPerformed(evt);
            }
        });
        mnAutor.add(itMnAtuAutor);

        itMnConsultar1.setText("Consulta..");
        itMnConsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itMnConsultar1ActionPerformed(evt);
            }
        });
        mnAutor.add(itMnConsultar1);

        barMnPrincipal.add(mnAutor);

        setJMenuBar(barMnPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnBusca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCadastro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(pnPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(pnBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCadastro)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cxBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxBuscaActionPerformed

    private void itMnConsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itMnConsultar1ActionPerformed
        FromConAutor.gerFromAtuAutor().setVisible(true);
    }//GEN-LAST:event_itMnConsultar1ActionPerformed

    private void itMnAtuAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itMnAtuAutorActionPerformed
        FromAtuAutor.gerFromAtuAutor().setVisible(true);
    }//GEN-LAST:event_itMnAtuAutorActionPerformed

    private void itMnCadAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itMnCadAutorActionPerformed
        FromCadAutor.gerarFromCadAutor().setVisible(true);
    }//GEN-LAST:event_itMnCadAutorActionPerformed

    private void itMnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itMnConsultarActionPerformed
        FromConEditora.gerFromAtuEditora().setVisible(true);
    }//GEN-LAST:event_itMnConsultarActionPerformed

    private void itMnAtuEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itMnAtuEditoraActionPerformed
        FromAtuEditora.gerFromAtuEditora().setVisible(true);
    }//GEN-LAST:event_itMnAtuEditoraActionPerformed

    private void itMnCadEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itMnCadEditoraActionPerformed
        FromCadEditora.gerarFromCadEditora().setVisible(true);
    }//GEN-LAST:event_itMnCadEditoraActionPerformed

    private void itCadLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itCadLivroActionPerformed
        FromCadLivro.gerarFromCadLivro().setVisible(true);
    }//GEN-LAST:event_itCadLivroActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(!buscaDetalhada) listarLivros();
        else buscar();
    }//GEN-LAST:event_formWindowActivated

    private void itAtuLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itAtuLivroActionPerformed
       FromAtuLivro.gerarFromAtuLivro().setVisible(true);
    }//GEN-LAST:event_itAtuLivroActionPerformed

    private void tbLivrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbLivrosMouseClicked
        descreverlivro();
    }//GEN-LAST:event_tbLivrosMouseClicked

    private void btCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastroActionPerformed
        cadTeste();
    }//GEN-LAST:event_btCadastroActionPerformed

    private void cxBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxBuscaKeyReleased
        buscar();
    }//GEN-LAST:event_cxBuscaKeyReleased

    public void buscar(){
        List<Infantil> bdInfantil = new ArrayList<Infantil>();
        List<Didatico> bdDidatico = new ArrayList<Didatico>();
        List<Colecionavel> bdColecionavel = new ArrayList<Colecionavel>();
        
        String nome = cxBusca.getText().trim();
        if(nome.length() == 0){
            buscaDetalhada = false;
            listarLivros();
            return;
        }
        buscaDetalhada = true;

        nome = limpaString(nome);
        buscaColecionavel(bdColecionavel,nome);
        buscaDidatico(bdDidatico, nome);
        buscainfantil(bdInfantil, nome);

        DefaultTableModel modTab = (DefaultTableModel)tbLivros.getModel();
        int posLin = 0;
        modTab.setRowCount(posLin);

        for(Colecionavel colecionavel : bdColecionavel){//reflexividade para autor e editora
            modTab.insertRow(posLin, new Object[]{colecionavel.getId(),colecionavel.getTitulo(),"Colecionavel",colecionavel.getAutor().getNome(),colecionavel.getEditora().getNome()});
            posLin++;
        }

        for(Didatico didatico : bdDidatico){//reflexividade para autor e editora
            modTab.insertRow(posLin, new Object[]{didatico.getId(),didatico.getTitulo(),"Didatico",didatico.getAutor().getNome(),didatico.getEditora().getNome()});
            posLin++;
        }

        for(Infantil infantil : bdInfantil){//reflexividade para autor e editora
            modTab.insertRow(posLin, new Object[]{infantil.getId(),infantil.getTitulo(),"infantil",infantil.getAutor().getNome(),infantil.getEditora().getNome()});
            posLin++;
        }
    }
    
    public void buscaColecionavel(List<Colecionavel> list ,String texto){
        for(Colecionavel livro : armazen.getBdColecionavel()){
            
            if(limpaString(livro.getTitulo()).contains(texto)){
                list.add(livro);
                //reflexibibilidade

            }else if(limpaString(livro.getAutor().getNome()).contains(texto)){
                list.add(livro);
                //reflexibibilidade
            }else if(limpaString(livro.getEditora().getNome()).contains(texto)){
                list.add(livro);
            }
            System.gc();
        }
    }

    public void buscaDidatico(List<Didatico> list ,String texto){
        for(Didatico livro : armazen.getBdDidatico()){
            if(limpaString(livro.getTitulo()).contains(texto)){
                list.add(livro);
                //reflexibibilidade
            }else if(limpaString(livro.getAutor().getNome()).contains(texto)){
                list.add(livro);
                //reflexibibilidade
            }else if(limpaString(livro.getEditora().getNome()).contains(texto)){
                list.add(livro);
            }
            System.gc();
        }
    }

    public void buscainfantil(List<Infantil> list ,String texto){
        for(Infantil livro : armazen.getBdInfantil()){
            if(limpaString(livro.getTitulo()).contains(texto)){
                list.add(livro);
                //reflexibibilidade
            }else if(limpaString(livro.getAutor().getNome()).contains(texto)){
                list.add(livro);
                //reflexibibilidade
            }else if(limpaString(livro.getEditora().getNome()).contains(texto)){
                list.add(livro);
            }
            System.gc();
        }
    }

    public String limpaString(String text){
        return Normalizer.normalize(text.toLowerCase(), Normalizer.Form.NFD).replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
    }
    
    public void descreverlivro(){
        int livroId;
        String tipo = "";
        StringBuilder sb = new StringBuilder(); 

        int posLin = tbLivros.getSelectedRow();
        
        livroId = (int) tbLivros.getModel().getValueAt(posLin,0);
        tipo = tbLivros.getModel().getValueAt(posLin,2).toString();
        
        if(tipo.equalsIgnoreCase("Colecionavel")){
            getDataColecionavel(livroId, sb);
        }else if(tipo.equalsIgnoreCase("Didatico")){
            getDataDidatico(livroId, sb);
        }else if(tipo.equalsIgnoreCase("Infantil")){
            getDataInfantil(livroId, sb);
        }
        
        JTextArea area = new JTextArea(sb.toString());
        area.setEditable(false);
        area.setFont(new Font("monospaced", Font.PLAIN, 12)); 

        JScrollPane scroll = new JScrollPane(area);
        scroll.setPreferredSize(new Dimension(400, 250)); 

        JOptionPane.showMessageDialog(null, scroll, "Detalhes do Livro", JOptionPane.INFORMATION_MESSAGE);

    }

    public void getDataColecionavel(int id,StringBuilder sb){
        Colecionavel colecionavel = armazen.getColecionavelById(id);
        if(colecionavel != null){

            sb.append("ID: ").append(colecionavel.getId()).append("\n");
            sb.append("Título: ").append(colecionavel.getTitulo()).append("\n");
            //reflexibxibilidade
            sb.append("Autor CPF: ").append(colecionavel.getAutor().getCpf()).append("\n");
            sb.append("Autor: ").append(colecionavel.getAutor().getNome()).append("\n");
            sb.append("Editora CNPJ: ").append(colecionavel.getEditora().getCnpj()).append("\n");
            sb.append("Editora: ").append(colecionavel.getEditora().getNome()).append("\n");

            // refelexibilidades
            sb.append("Localização:\n");
            sb.append("  - Seção: ").append(colecionavel.getLocalizacao().getSecao()).append("\n");
            sb.append("  - Prateleira: ").append(colecionavel.getLocalizacao().getPrateleira()).append("\n");
            sb.append("  - Linha: ").append(colecionavel.getLocalizacao().getLinha()).append("\n");

            sb.append("Edição Especial: ").append(colecionavel.getEdicaoEspecial()).append("\n");
            sb.append("Adicional: ").append(colecionavel.getAdicional()).append("\n");
            sb.append("Numerado: ").append(colecionavel.isNumerado() ? "Sim" : "Não").append("\n");
        }
    }

    public void getDataDidatico(int id, StringBuilder sb) {
        Didatico didatico = armazen.getDidaticoById(id);
        if (didatico != null) {

            sb.append("ID: ").append(didatico.getId()).append("\n");
            sb.append("Título: ").append(didatico.getTitulo()).append("\n");

            // Reflexividade
            sb.append("Autor: ").append(didatico.getAutor().getNome()).append("\n");
            sb.append("Editora: ").append(didatico.getEditora().getNome()).append("\n");

            // Reflexividade
            sb.append("Localização:\n");
            sb.append("  - Seção: ").append(didatico.getLocalizacao().getSecao()).append("\n");
            sb.append("  - Prateleira: ").append(didatico.getLocalizacao().getPrateleira()).append("\n");
            sb.append("  - Linha: ").append(didatico.getLocalizacao().getLinha()).append("\n");

            sb.append("Nível: ").append(didatico.getNivel()).append("\n");
            sb.append("Matéria: ").append(didatico.getMateria()).append("\n");
            sb.append("Complexidade: ").append(didatico.getComplexidade()).append("\n");
        }
    }

    public void getDataInfantil(int id, StringBuilder sb) {
        Infantil infantil = armazen.getInfantilById(id);
        if (infantil != null) {

            sb.append("ID: ").append(infantil.getId()).append("\n");
            sb.append("Título: ").append(infantil.getTitulo()).append("\n");

            // Reflexividade
            sb.append("Autor: ").append(infantil.getAutor().getNome()).append("\n");
            sb.append("Editora: ").append(infantil.getEditora().getNome()).append("\n");

            // Reflexividade
            sb.append("Localização:\n");
            sb.append("  - Seção: ").append(infantil.getLocalizacao().getSecao()).append("\n");
            sb.append("  - Prateleira: ").append(infantil.getLocalizacao().getPrateleira()).append("\n");
            sb.append("  - Linha: ").append(infantil.getLocalizacao().getLinha()).append("\n");

            sb.append("Faixa Etária: ").append(infantil.getFaixaEtaria()).append("\n");
            sb.append("Material: ").append(infantil.getMaterial()).append("\n");
            sb.append("Interativo: ").append(infantil.isInterativo() ? "Sim" : "Não").append("\n");
        }
    }


    public void listarLivros(){
        DefaultTableModel modTab = (DefaultTableModel)tbLivros.getModel();
        int posLin = 0;
        modTab.setRowCount(posLin);
        
        for(Colecionavel colecionavel : armazen.getBdColecionavel()){//reflexividade para autor e editora
            modTab.insertRow(posLin, new Object[]{colecionavel.getId(),colecionavel.getTitulo(),"Colecionavel",colecionavel.getAutor().getNome(),colecionavel.getEditora().getNome()});
            posLin++;
        }

        for(Didatico didatico : armazen.getBdDidatico()){//reflexividade para autor e editora
            modTab.insertRow(posLin, new Object[]{didatico.getId(),didatico.getTitulo(),"Didatico",didatico.getAutor().getNome(),didatico.getEditora().getNome()});
            posLin++;
        }

        for(Infantil infantil : armazen.getBdInfantil()){//reflexividade para autor e editora
            modTab.insertRow(posLin, new Object[]{infantil.getId(),infantil.getTitulo(),"infantil",infantil.getAutor().getNome(),infantil.getEditora().getNome()});
            posLin++;
        }
    }

    public void cadTeste(){
        // Este cadastro é apenas para teste, por isso utilizo construtores sobrecarregados  
        // para evitar o tratamento de exceções neste caso. No entanto, o tratamento está  
        // implementado corretamente no cadastro principal de cada item.  

        // Como este cadastro é apenas para testes, ele pode duplicar IDs caso seja executado  
        // múltiplas vezes. Como isso não gera problemas críticos, mantive desta forma para  
        // facilitar a visualização e teste das ferramentas de busca.  
        
        armazen.getBdAutores().add(new Autor(false, "Machado de Assis", "12345"));
        armazen.getBdAutores().add(new Autor(false, "Clarice Lispector", "23456"));
        armazen.getBdAutores().add(new Autor(false, "Carlos Drummond", "34567"));
        armazen.getBdAutores().add(new Autor(false, "Monteiro Lobato", "45678"));
        armazen.getBdAutores().add(new Autor(false, "Cecília Meireles", "56789"));

        armazen.getBdEditoras().add(new Editora(false, "Companhia das Letras", "11111"));
        armazen.getBdEditoras().add(new Editora(false, "Globo", "22222"));
        armazen.getBdEditoras().add(new Editora(false, "Record", "33333"));
        armazen.getBdEditoras().add(new Editora(false, "Ática", "44444"));
        armazen.getBdEditoras().add(new Editora(false, "Saraiva", "55555"));

        armazen.getBdInfantil().add(new Infantil(11, "O Pequeno Príncipe", armazen.getBdAutores().get(0),
        new Localizacao("INF", 1, 1), armazen.getBdEditoras().get(0), false,
        8, "Papel couché brilhante", true));

        armazen.getBdInfantil().add(new Infantil(12, "Marcelo, Marmelo, Martelo", armazen.getBdAutores().get(1),
                new Localizacao("INF", 1, 2), armazen.getBdEditoras().get(1), false,
                6, "Papel reciclado", false));

        armazen.getBdInfantil().add(new Infantil(13, "O Menino Maluquinho", armazen.getBdAutores().get(2),
                new Localizacao("INF", 1, 3), armazen.getBdEditoras().get(2), false,
                7, "Cartonado", true));

        armazen.getBdInfantil().add(new Infantil(14, "A Bolsa Amarela", armazen.getBdAutores().get(3),
                new Localizacao("INF", 1, 4), armazen.getBdEditoras().get(3), false,
                9, "Papel offset", false));

        armazen.getBdInfantil().add(new Infantil(15, "A Arca de Noé", armazen.getBdAutores().get(4),
                new Localizacao("INF", 1, 5), armazen.getBdEditoras().get(4), false,
                5, "Papel resistente", true));

        armazen.getBdColecionavel().add(new Colecionavel(6, "Dom Casmurro - Edição Comemorativa", armazen.getBdAutores().get(0),
                new Localizacao("RAR", 1, 1), armazen.getBdEditoras().get(0), false,
                "Edição de 120 anos", true, "Capa dura com sobrecapa"));

        armazen.getBdColecionavel().add(new Colecionavel(7, "A Hora da Estrela - Edição de Luxo", armazen.getBdAutores().get(1),
                new Localizacao("RAR", 1, 2), armazen.getBdEditoras().get(1), false,
                "Edição limitada com manuscritos", true, "Encadernação em couro"));

        armazen.getBdColecionavel().add(new Colecionavel(8, "Claro Enigma - Edição Crítica", armazen.getBdAutores().get(2),
                new Localizacao("RAR", 1, 3), armazen.getBdEditoras().get(2), false,
                "Com comentários do autor", false, "Capa dura"));

        armazen.getBdColecionavel().add(new Colecionavel(9, "Reinações de Narizinho - Edição Histórica", armazen.getBdAutores().get(3),
                new Localizacao("RAR", 1, 4), armazen.getBdEditoras().get(3), false,
                "Fac-símile da primeira edição", true, "Com ilustrações originais"));

        armazen.getBdColecionavel().add(new Colecionavel(10, "Ou Isto ou Aquilo - Edição Especial", armazen.getBdAutores().get(4),
                new Localizacao("RAR", 1, 5), armazen.getBdEditoras().get(4), false,
                "Com desenhos da autora", false, "Capa em tecido"));

        armazen.getBdColecionavel().add(new Colecionavel(6, "Dom Casmurro - Edição Comemorativa", armazen.getBdAutores().get(0),
                new Localizacao("RAR", 1, 1), armazen.getBdEditoras().get(0), false,
                "Edição de 120 anos", true, "Capa dura com sobrecapa"));

        armazen.getBdColecionavel().add(new Colecionavel(7, "A Hora da Estrela - Edição de Luxo", armazen.getBdAutores().get(1),
                new Localizacao("RAR", 1, 2), armazen.getBdEditoras().get(1), false,
                "Edição limitada com manuscritos", true, "Encadernação em couro"));

        armazen.getBdColecionavel().add(new Colecionavel(8, "Claro Enigma - Edição Crítica", armazen.getBdAutores().get(2),
                new Localizacao("RAR", 1, 3), armazen.getBdEditoras().get(2), false,
                "Com comentários do autor", false, "Capa dura"));

        armazen.getBdColecionavel().add(new Colecionavel(9, "Reinações de Narizinho - Edição Histórica", armazen.getBdAutores().get(3),
                new Localizacao("RAR", 1, 4), armazen.getBdEditoras().get(3), false,
                "Fac-símile da primeira edição", true, "Com ilustrações originais"));

        armazen.getBdColecionavel().add(new Colecionavel(10, "Ou Isto ou Aquilo - Edição Especial", armazen.getBdAutores().get(4),
                new Localizacao("RAR", 1, 5), armazen.getBdEditoras().get(4), false,
                "Com desenhos da autora", false, "Capa em tecido"));
                
        JOptionPane.showMessageDialog(
            null,
            "Cadastro realizado",
            "cadastro teste",
            JOptionPane.INFORMATION_MESSAGE
        );
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FromPrincipal().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barMnPrincipal;
    private javax.swing.JButton btCadastro;
    private javax.swing.JTextField cxBusca;
    private javax.swing.JMenuItem itAtuLivro;
    private javax.swing.JMenuItem itCadLivro;
    private javax.swing.JMenuItem itMnAtuAutor;
    private javax.swing.JMenuItem itMnAtuEditora;
    private javax.swing.JMenuItem itMnCadAutor;
    private javax.swing.JMenuItem itMnCadEditora;
    private javax.swing.JMenuItem itMnConsultar;
    private javax.swing.JMenuItem itMnConsultar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenu mnAutor;
    private javax.swing.JMenu mnEditora;
    private javax.swing.JMenu mnLivro;
    private javax.swing.JPanel pnBusca;
    private javax.swing.JPanel pnPrincipal;
    private javax.swing.JLabel rtBusca;
    private javax.swing.JLabel rtDetalhes;
    private javax.swing.JLabel rtMeioBusca;
    private javax.swing.JLabel rtNome;
    private javax.swing.JLabel rtTitulo;
    private javax.swing.JTable tbLivros;
    // End of variables declaration//GEN-END:variables
}
